[general]
ui = ttyui
fsync = False
pythonfile = ~/.mutt/bin/offlineimap.py
accounts = Personal, Temp, Work
maxconnections = 3

[Account Personal]
localrepository = Personal-Local
remoterepository = Personal-Remote
status_backend = sqlite
autorefresh = 0.5
quick = 10

[Repository Personal-Local]
type = Maildir
localfolders = ~/Mail/Personal
nametrans = lambda folder: {
  'drafts':  '[Gmail]/Drafts',
  'sent':    '[Gmail]/Sent Mail',
  'starred': '[Gmail]/Starred',
  'trash':   '[Gmail]/Trash',
  'archive': '[Gmail]/All Mail'}.get(folder, folder)

[Repository Personal-Remote]
type = Gmail
keepalive = 60
remoteusereval = get_keepass("user", group_name="Google", title="Personal")
remotepasseval = get_keepass("app_pass", group_name="Google", title="Personal")
sslcacertfile = /etc/ssl/certs/ca-certificates.crt
nametrans = lambda folder: {
  '[Gmail]/Drafts':    'drafts',
  '[Gmail]/Sent Mail': 'sent',
  '[Gmail]/Starred':   'starred',
  '[Gmail]/Trash':     'trash',
  '[Gmail]/All Mail':  'archive'}.get(folder, folder)
folderfilter = lambda folder: folder not in [
  '[Gmail]/Chats',
  '[Gmail]/Important',
  '[Gmail]/All Mail',
  '[Gmail]/Spam']

[Account Temp]
localrepository = Temp-Local
remoterepository = Temp-Remote
status_backend = sqlite
autorefresh = 0.5
quick = 10

[Repository Temp-Local]
type = Maildir
localfolders = ~/Mail/Temp
nametrans = lambda folder: {
  'drafts':  '[Gmail]/Drafts',
  'sent':    '[Gmail]/Sent Mail',
  'starred': '[Gmail]/Starred',
  'trash':   '[Gmail]/Trash',
  'archive': '[Gmail]/All Mail'}.get(folder, folder)

[Repository Temp-Remote]
type = Gmail
keepalive = 60
auth_mechanisms = XOAUTH2
remoteusereval = get_keepass("user", group_name="Google", title="Temp")
oauth2_client_id_eval = get_keepass("client_id", group_name="Google", title="Temp")
oauth2_client_secret_eval = get_keepass("client_secret", group_name="Google", title="Temp")
oauth2_refresh_token_eval = get_keepass("refresh_token", group_name="Google", title="Temp")
sslcacertfile = /etc/ssl/certs/ca-certificates.crt
nametrans = lambda folder: {
  '[Gmail]/Drafts':    'drafts',
  '[Gmail]/Sent Mail': 'sent',
  '[Gmail]/Starred':   'starred',
  '[Gmail]/Trash':     'trash',
  '[Gmail]/All Mail':  'archive'}.get(folder, folder)
folderfilter = lambda folder: folder not in [
  '[Gmail]/Chats',
  '[Gmail]/Important',
  '[Gmail]/All Mail',
  '[Gmail]/Spam']

[Account Work]
localrepository = Work-Local
remoterepository = Work-Remote
status_backend = sqlite
autorefresh = 0.5
quick = 10

[Repository Work-Local]
type = Maildir
localfolders = ~/Mail/Work
nametrans = lambda folder: {
  'drafts':  '[Gmail]/Drafts',
  'sent':    '[Gmail]/Sent Mail',
  'starred': '[Gmail]/Starred',
  'trash':   '[Gmail]/Trash',
  'archive': '[Gmail]/All Mail'}.get(folder, folder)

[Repository Work-Remote]
type = Gmail
keepalive = 60
auth_mechanisms = XOAUTH2
remoteusereval = get_keepass("user", group_name="Google", title="Work")
oauth2_client_id_eval = get_keepass("client_id", group_name="Google", title="Work")
oauth2_client_secret_eval = get_keepass("client_secret", group_name="Google", title="Work")
oauth2_refresh_token_eval = get_keepass("refresh_token", group_name="Google", title="Work")
sslcacertfile = /etc/ssl/certs/ca-certificates.crt
nametrans = lambda folder: {
  '[Gmail]/Drafts':    'drafts',
  '[Gmail]/Sent Mail': 'sent',
  '[Gmail]/Starred':   'starred',
  '[Gmail]/Trash':     'trash',
  '[Gmail]/All Mail':  'archive'}.get(folder, folder)
folderfilter = lambda folder: folder not in [
  '[Gmail]/Chats',
  '[Gmail]/Important',
  '[Gmail]/All Mail',
  '[Gmail]/Spam']
